@namespace CouplesJournal.Components

@using Markdig
@using CouplesJournal.Data
@using CouplesJournal.Data.API
@using CouplesJournal.Data.Entities
@using CouplesJournal.Helper
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@inject CouplesJournalDbContext DbContext
@inject AuthenticationStateProvider AuthenticationStateProvider

@if (!string.IsNullOrEmpty(ErrorMessage))
{
<div class="container-fluid">
    <div class="row">
        <div class="col mw-100">
            <div class="card" style=@(GetStyle(Journal))>
                <div class="card-body">
                    <h5 class="card-title">@Journal.Title @EntryStatus</h5>
                    <h6 class="card-subtitle mb-2 text-muted">
                        by @Journal.UserName.Split("@")[0] on
                        @Journal.UpdatedOn.ToLongDateString() &#64; @Journal.UpdatedOn.ToLongTimeString()
                    </h6>
                    <p class="card-text" style="margin-top: 15px">
                        @(((MarkupString) Markdown.ToHtml(@Journal.Body)).Sanitize())
                    </p>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col mw-100">
            <JournalReplyAdd JournalId=@Journal.Id.ToString() />
        </div>
    </div>
    @if (Journal.Replies.Any())
        {
    <hr />
    <div class="row">
        <div class="col mw-100">
            @foreach (var reply in Journal.Replies.OrderByDescending(x => x.UpdatedOn))
                    {
            <div class="card" style="margin-top:15px;">
                <div class="card-body">
                    <div class="card-subtitle mb-2 text-muted">
                        <span>
                            by @reply.UserName.Split("@")[0] on @reply.UpdatedOn.ToLongDateString()
                            &#64;@reply.UpdatedOn.ToLongTimeString()
                        </span>

                        @if (reply.UserName == _user.Identity.Name)
                                    {
                        <span>
                            &nbsp;<a href=@($"/EditJournalReply/{@Journal.Id}/reply/{reply.Id}")
                            class="card-link">Edit</a>
                        </span>
                        }
                    </div>
                    <p class="card-text" style="margin-top: 15px">
                        @(((MarkupString) Markdown.ToHtml(@reply.Body)).Sanitize())
                    </p>
                </div>
            </div>
            }
        </div>
    </div>
    }
</div>
}
else
{
<span>@ErrorMessage</span>
}

@code
{
    [Parameter]
    public string JournalId { get; set; }
    private JournalEntry Journal { get; set; }
    private string EntryStatus { get; set; } = "";
    private string ErrorMessage { get; set; } = "Entry Id cannot be an empty Guid";
    private ClaimsPrincipal _user;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _user = authState.User;

        if (!string.IsNullOrEmpty(JournalId))
        {
            try
            {
                var journalIdGuid = Guid.Parse(JournalId);
                var api = new CouplesJournalDataApi(DbContext, _user);

                Journal = await api.GetJournalEntryWithRepliesAsync(journalIdGuid);
            }
            catch (FormatException fe)
            {
                ErrorMessage = fe.Message;
            }
            catch (ArgumentException ae)
            {
                ErrorMessage = ae.Message;
            }

            if (Journal == null)
            {
                ErrorMessage = "The journal entry does not exist!";
            }
        }
    }

    // TODO: This needs to be GetClass() and styles need to be in CSS not here!
    private string GetStyle(JournalEntry entry)
    {
        var defaultStyle = "margin-bottom: 15px";
        var draftStatusBGColor = "background-color:#555555";

        if (entry.Status.Value.ToLower() != "draft")
        {
            return $"{defaultStyle}";
        }
        else
        {
            EntryStatus = $"({entry.Status.Value})";
            return $"{defaultStyle};{draftStatusBGColor}";
        }
    }
}